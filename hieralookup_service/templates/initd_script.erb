### BEGIN INIT INFO
# Provides:          hieralookup-service
# Required-Start:    $remote_fs
# Required-Stop:     $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start hiera lookup service at boot up
# Description:       Enable hiera lookup service
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=<%= @deploy_dir %>/hieralookup.rb
DAEMON_OPTS='-p <%= @port %>'
NAME=hieralookup
DESC="hieralookup service"
PIDFILE="/var/run/${NAME}.pid"
                                                                                                                                        
test -x $DAEMON || exit 0                                                                                                               
                                                                                                                                        
. /lib/lsb/init-functions                                                                                                               
                                                                                                                                        
start_hieralookup_service() {   
start-stop-daemon --pidfile $PIDFILE --make-pidfile --background --no-close --chdir <%= @deploy_dir %> --startas $DAEMON --start -- $DAEMON_OPTS
}                                                                                                                                       
                                                                                                                                        
stop_hieralookup_service() {                                                                                                                   
start-stop-daemon --stop --retry TERM/10/KILL/5 --quiet --oknodo --pidfile $PIDFILE                                                 
}                                                                                                                                       
                                                                                                                                        
status_hieralookup_service() {                                                                                                                 
    if (type status_of_proc > /dev/null 2>&1) ; then                                                                                    
        status_of_proc -p "${PIDFILE}" "${DAEMON}" "${NAME}"                                                                            
    else                                                                                                                                
        status_of_proc() {                                                                                                              
            local pidfile daemon name status                                                                                            
                                                                                                                                        
            pidfile=                                                                                                                    
            OPTIND=1                                                                                                                    
            while getopts p: opt ; do                                                                                                   
                case "$opt" in                                                                                                          
                    p)  pidfile="$OPTARG";;                                                                                             
                esac                                                                                                                    
            done                                                                                                                        
            shift $(($OPTIND - 1))                                                                                                      
                                                                                                                                        
            if [ -n "$pidfile" ]; then                                                                                                  
                pidfile="-p $pidfile"                                                                                                   
            fi                                                                                                                          
            daemon="$1"                                                                                                                 
            name="$2"                                                                                                                   
            status="0"
            pidofproc $pidfile $daemon >/dev/null || status="$?"
            if [ "$status" = 0 ]; then
                log_success_msg "$name is running"
                return 0
            elif [ "$status" = 4 ]; then
                log_failure_msg "could not access PID file for $name"
                return $status
            else
                log_failure_msg "$name is not running"
                return $status
            fi
        }
        status_of_proc -p "${PIDFILE}" "${DAEMON}" "${NAME}"
    fi
}

case "$1" in
    start)
        log_begin_msg "Starting $DESC"
        start_hieralookup_service
        log_end_msg $?
    ;;
    stop)
        log_begin_msg "Stopping $DESC"
        stop_hieralookup_service
        log_end_msg $?
    ;;
    status)
        status_hieralookup_service
    ;;
    restart)
        log_begin_msg "Restarting $DESC"
        stop_hieralookup_service
        start_hieralookup_service
        log_end_msg $?
    ;;
    *)
        echo "Usage: $0 {start|stop|status|restart}" >&2
        exit 1
    ;;
esac
